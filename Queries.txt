1. "Write a query to show all the documents in the Restaurants collection."
db.restaurants.find()

2. "Write a query to show the restaurant_id, name, borough, and cuisine for all the documents in the Restaurants collection."
db.restaurants.find({}, {restaurante_id: 1, name: 1,  borough: 1, cousine: 1})

3. "Write a query to show the restaurant_id, name, borough, and cuisine, but exclude the _id field for all the documents in the Restaurants collection."
db.restaurants.find({}, {_id: 0, restaurante_id: 1, name: 1,  borough: 1, cousine: 1})

4. "Write a query to show restaurant_id, name, borough, and zip code, but exclude the _id field for all the documents in the Restaurants collection."
db.restaurants.find({}, {_id: 0, restaurant_id: 1, name: 1, borough: 1, 'address.zipcode': 1})

5. "Write a query to show all the restaurants that are in the Bronx."
db.restaurants.find({borough: 'Bronx'}) 

6. "Write a query to show the first 5 restaurants that are in the Bronx."
db.restaurants.find({borough: 'Bronx'}).limit(5)

7. "Write a query to show the next 5 restaurants after skipping the first 5 in the Bronx."
db.restaurants.find({borough: 'Bronx'}).skip(5).limit(5)

8. "Write a query to find the restaurants that have a score greater than 90."
db.restaurants.find({'grades.score': {$gt: 90}})

9. "Write a query to find the restaurants that have a score greater than 80 but less than 100."
db.restaurants.find({'grades.score': {$gt:80, $lt:100}})

10. "Write a query to find the restaurants that are located at a latitude value less than -95.754168."
db.restaurants.find({'address.coord': {$lt: -95.754168}})

11. "Write a MongoDB query to find the restaurants that do not serve any 'American' cuisine, have a rating greater than 70, and a longitude less than -65.754168."
db.restaurants.find({$and: [{cuisine: {$not: /American/}}, {'grades.score': {$gt: 70}}, {'address.coord': {$lt: -65.754168}}]})

12. "Write a query to find the restaurants that do not serve any 'American' cuisine, have a score greater than 70, and are located at a longitude less than -65.754168. Note: Perform this query without using the $and operator."
db.restaurants.find({cuisine: {$not: /American/}, 'grades.score': {$gt: 70}, 'address.coord': {$lt: -65.754168}})

13. "Write a query to find the restaurants that do not serve any 'American' cuisine, have received an 'A' grade, and do not belong to Brooklyn. The document should be displayed sorted by cuisine in descending order."
db.restaurants.find({cuisine: {$not: /American/}, 'grades.grade': 'A', borough: {$not: /Brooklyn/}}).sort({cuisine: -1})

14. "Write a query to find the restaurant_id, name, borough, and cuisine for those restaurants whose name starts with 'Wil'."
db.restaurants.find({name: /^Wil/}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1})

15. "Write a query to find the restaurant_id, name, borough, and cuisine for those restaurants whose name ends with 'ces'."
db.restaurants.find({name: /ces$/}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1})

16. "Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'Reg' com tres lletres en algun lloc en el seu nom."
db.restaurants.find({name: /Reg/}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1})

17. "Write a query to find the restaurants that are in the Bronx and serve either American or Chinese cuisine."
db.restaurants.find({borough: 'Bronx', cuisine: {$in: ['American', 'Chinese']}})
